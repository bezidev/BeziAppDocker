version: '3.8'
services:
  nginx-proxy:
    depends_on:
      - frontend
      - backend
    image: nginx:alpine
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./dhparam:/etc/ssl/certs
    networks:
      beziapp:
        aliases:
          - nginx
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  frontend:
    image: ghcr.io/mytja/beziapp/frontend
    depends_on:
      - backend
    networks:
      beziapp:
        aliases:
          - frontend
  backend:
    image: ghcr.io/mytja/beziapp/backend
    volumes:
      - ./refresh_token.txt:/app/refresh_token.txt
      - ./substitutions:/app/substitutions
    restart: always
    networks:
      beziapp:
        aliases:
          - backend
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - nginx-proxy
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 60 --cleanup
    depends_on:
      - nginx-proxy
      - backend
      - frontend
networks:
  beziapp:

volumes:
  certbot-etc:
  certbot-var:
  web-root:
